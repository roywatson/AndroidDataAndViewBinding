<?xml version="1.0" encoding="utf-8"?>
<!-- WATSON: To use databinding you must wrap your normal root layout element in an actual
  "layout" element. Be sure to moe your schema declarations to this element -->
<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    >
    <!-- WATSON: Add references to "variables" here  -->
    <data>
        <variable name="viewModel" type="com.delasystems.androiddataandviewbinding.ui.main.MainViewModel" />
    </data>

    <androidx.constraintlayout.widget.ConstraintLayout
        android:id="@+id/main"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        tools:context=".ui.main.MainFragment">

        <!-- WATSON: Now we can "bind" the button text to the live data in our viewModel. This is
        a simple example of "data binding" -->
        <Button
            android:id="@+id/button_start_stop"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="@{viewModel.buttonText}"
            app:layout_constraintTop_toTopOf="parent"
            app:layout_constraintBottom_toTopOf="@+id/mem_message"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintVertical_chainStyle="packed"/>

        <!-- WATSON: And we can "bind" the TextView text to the live data in our viewModel. This is
         a simple example of "dats binding -->
        <TextView
            android:id="@+id/mem_message"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="@{viewModel.countText}"
            android:textSize="18sp"
            android:textColor="@color/black"
            android:layout_marginTop="25dp"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/button_start_stop" />

    </androidx.constraintlayout.widget.ConstraintLayout>
</layout>